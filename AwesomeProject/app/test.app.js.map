{"version":3,"sources":["test/app.cljs"],"mappings":";AAUA,GAAA,QAAAA,iCAAAC,qCAAAC;AAAA;AAAA,AAAA,AAASC,sBAAW,QAAA,RAACC;;AAErB,AAAKC,uEAUK,qBAAA,2CAAA,gEAAA,2CAAA,sDAAA,IAAA,2EAAA,OAAA,gEAAA,SAAA,wEAAA,iBAAA,sDAAA,2CAAA,gEAAA,OAAA,4DAAA,KAAA,uDAAA,zvBAACC,rDACD,AAACC;AAEX,gBAAA,hBAAMC;AAAN,AAAA,0FAAA,uFAAA,2CAAA,yFAAA,mFAAA,uFAAA,2CAAA,qFAAA,uBAAA,mFAAA,wFAAA,2CAAA,6EAAA,uDAAA,2CAAA,uDAAA,MAAA,yDAAA,x+BACMC,0IAAgB,AAAaJ,oKAC5BK,0IAAgB,AAASL,uLACzBM,6IAAkBR;;AAEzB,iBAAA,jBAAMS;AAAN,AAGE,uCAAA,hCAACC,iDAA6B,sDAAA,tDAACC,yIAAcN;;AAE/C,gBAAA,hBAAMO;AAAN,AACE,OAACH","names":["js/test","js/test.app","js/test.app.splash-img","test.app/splash-img","js/require","test.app/styles","cljs.core/clj->js","js/shadow.js.shim.module$react_native.StyleSheet.create","test.app/root","js/shadow.js.shim.module$react_native.View","js/shadow.js.shim.module$react_native.Text","js/shadow.js.shim.module$react_native.Image","test.app/start","shadow.react-native/render-root","reagent.core.as_element","test.app/init"],"sourcesContent":["(ns test.app\n  (:require\n    [shadow.react-native :refer (render-root)]\n    [\"react-native\" :as rn]\n    [reagent.core :as r]))\n\n;; must use defonce and must refresh full app so metro can fill these in\n;; at live-reload time `require` does not exist and will cause errors\n;; must use path relative to :output-dir\n\n(defonce splash-img (js/require \"../assets/shadow-cljs.png\"))\n\n(def styles\n  ^js (-> {:container\n           {:flex 1\n            :backgroundColor \"#fff\"\n            :alignItems \"center\"\n            :justifyContent \"center\"}\n           :title\n           {:fontWeight \"bold\"\n            :fontSize 24\n            :color \"blue\"}}\n          (clj->js)\n          (rn/StyleSheet.create)))\n\n(defn root []\n  [:> rn/View {:style (.-container styles)}\n   [:> rn/Text {:style (.-title styles)} \"Hello World!\"]\n   [:> rn/Image {:source splash-img :style {:width 200 :height 200}}]])\n\n(defn start\n  {:dev/after-load true}\n  []\n  (render-root \"AwesomeProject\" (r/as-element [root])))\n\n(defn init []\n  (start))\n"]}